import { expect, test } from "vitest";
import {
  encryptMessageBigint,
  stringToBigint,
} from "../src/lib/elgamal-commutative-node-1chunk";

test("testEncryptBigMessageInt", () => {
  const publicKey = BigInt(
    "0x3604d113ebdc5af0d64c20b264ad9510bab5a5e30838e74f9166001957d57a4381053ea18cf365d4056c765553fd01701a16dc492b62b4aca50f4a7305f69d450c892d9fac8e5bb2262b85a8f5037a061a5f8374bf8d58172908c366a86a6768730a6e1b1f673d43c622b6bac660835af06f1d600193239c22461791f878dcccb5ba2d378eba454e0c35a2378d0389be911227e3fe82bd8071e5889feb8fe21696ff0170ba2c81b3ca734c07b2f3c1b3a698198151344f5cf4d473885b69d8ed97774ca246663e4dee223fb4379a86186e63ee49cf1a3afd07521d0d184db11155e116816e3e6432ca4cf577064e5e74359b2e70c4521b257dd2bfc4fad83ab3",
  );
  // const privateKey = BigInt(
  //   "0x17961b1f461e2abcf70d0d2d6896ebc79602890102fbba7114bce0282452deb807b1cf193dddbe5330eec10abd9f35ca30cdf4c7a404bd5e7b8b493d6126361df60000f3ca12f630e95f4afdab15a7c264ee9c3df641ffaf008821a39c778fc163a8b54a6bb712437aa5bbf3a2c383362c69333bcc09f28804b61ca64012bb941ddbd7aa792416646504293e843e5f68805cca9a0817e23dbcff537f0b0929ccb6dd597ea3e63f888f70f954e71f59950b7a8dbcfe02128d7366499e5c7541910d4f050e9ee95bed9c045d5fdd6de504d080fccb6a06ba1f95a9de7fce9bca740028729c79ec352c32afb1f816708dcb997541ff8a281129588d54b31cc7203d",
  // );
  const r = BigInt(
    "0x42487fec44e8ebebfae79a43ec4f15e29a5786ed7f560c14b1e063d1a665c26364c68ecb046fb187000fb48f5cf25cdbe5fe556040b8c501744ec352623fa6dde35cb29e971309bd5ffd2350336972a64e12fb38ba7470d08b5b05b065c42e82b48c97a3e4c577d7b78576cda00deb05caf92f56a7bb414a54262a399182ed8cf49954981886269ab273daa3da74e75541c5045f88dc57420e5d015e9f6cab562fa6580351410c31ed0401be6e6784641ffbd822fe65f0db9aed947d9eb8caf50ffa31c143492fc54aeda70c7ae710f4bd3b4fe3bb5801e38d72f47652f92db0d8f3cf2dd331a7786c887a6a176414289e76a7eb23c88bb87f05c01e21af7aac",
  );
  const messageBigint = stringToBigint("0");
  const encrypted = encryptMessageBigint({
    messageBigint,
    publicKey,
    r,
  });
  console.log(encrypted.c2.toString(16).padStart(2, "0"));
  const expectedBigint = BigInt(
    "0x340a79a7397edd9e742a38ea5a757eab9a40ad888f9f1e3bcccf64fa26306e4577863ae74af8792802dbb953427febc5fa92dfd0ccf47e532457f18488d99cf9b6ad58d8e9c76e18a565fea51b1f057ec3d164391f9de1b2774a2c2dbdf0a95662333d1ba60ccab260461e197cb546443d0a805c3c41dfa919b54a0fe48d08f0057f8433ea5a39878990b7bde94581ac3bdf2762d4fc082e2eddb4c731819f7206c4b065092e871a5a6e43bd14c965ee4fa517ee5124bb08ef2b63fb82b601ad5655de6edfc6aa7b8b02499e08f5ee2fc40637433e636b5283809e94a4e2c990422c568525dfa1fbc983f5208f892418a6bf0cccb71bcb4a547c77b79b629b5a",
  );
  expect(encrypted.c2).toBe(expectedBigint);

  const messageBigint51 = stringToBigint("51");
  const encrypted51 = encryptMessageBigint({
    messageBigint: messageBigint51,
    publicKey,
    r,
  });
  console.log(encrypted51.c2.toString(16).padStart(2, "0"));
  const expectedBigint51 = BigInt(
    "0x8b5baf7f86c636939ce048c5699378c316c78fe38685e2b83f6f8c4c4f61b337eeb07b56f578c47e4737ca53e5c5ffee067d0972f38f83513699bfc5b12ec120ec1758d48b5157172b20818bca9a5cc45b9551aa020a30f183a6449d37a0dbf229d0af1cfe571eb278708e7785ddcf7b516f492e09caad8bc2b9adc991a7d75b5c097334b034c88d8e77a8adf35f5c5c66db8cb4c904348e79bab7e4aa944a8e0ec5712d9d2505da77774b7f8b98b86b8128597172c18a9fc0ee525d591636a8718b95c6bc3964399be7b495a2d33c3d19f8c70d5ce404b46611d7f264c895c47b1208d28faa565660e5f347ec7eceda7ea67b26f7d550405fadea4700d58785",
  );
  expect(encrypted51.c2).toBe(expectedBigint51);
});
